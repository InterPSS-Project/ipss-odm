//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.8-b130911.1802 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2021.08.01 at 09:47:29 PM PDT 
//


package org.ieee.odm.schema;

import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlEnumValue;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for TransimissionEquiptmentEnumType.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <p>
 * <pre>
 * &lt;simpleType name="TransimissionEquiptmentEnumType">
 *   &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string">
 *     &lt;enumeration value="Capacitor"/>
 *     &lt;enumeration value="Breaker"/>
 *     &lt;enumeration value="Shunt"/>
 *     &lt;enumeration value="Gen"/>
 *     &lt;enumeration value="Load"/>
 *     &lt;enumeration value="Line"/>
 *     &lt;enumeration value="Transformer"/>
 *   &lt;/restriction>
 * &lt;/simpleType>
 * </pre>
 * 
 */
@XmlType(name = "TransimissionEquiptmentEnumType")
@XmlEnum
public enum TransimissionEquiptmentEnumType {

    @XmlEnumValue("Capacitor")
    CAPACITOR("Capacitor"),
    @XmlEnumValue("Breaker")
    BREAKER("Breaker"),
    @XmlEnumValue("Shunt")
    SHUNT("Shunt"),
    @XmlEnumValue("Gen")
    GEN("Gen"),
    @XmlEnumValue("Load")
    LOAD("Load"),
    @XmlEnumValue("Line")
    LINE("Line"),
    @XmlEnumValue("Transformer")
    TRANSFORMER("Transformer");
    private final String value;

    TransimissionEquiptmentEnumType(String v) {
        value = v;
    }

    public String value() {
        return value;
    }

    public static TransimissionEquiptmentEnumType fromValue(String v) {
        for (TransimissionEquiptmentEnumType c: TransimissionEquiptmentEnumType.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}
